extend type Query {
  "Get events - [for logged-in user]"
  events(status: EVENT_STATUS!): [Event]!
  "Get an event by id - [for logged-in user]"
  event_getById(id: ID!): Event!
  """
  Generate an invitaion link for an event.
  This invitation link is to be generated before an event is created.
  This endpoint should be called before the Invite tab in the event creation process.
  The link can then be passed as an argument to the event_create api.
  """
  event_generateInviteLinkId: String!
}

extend type Mutation {
  "Create an event"
  event_create(input: CreateEventArgs!): EventResponse!
  "Delete an event"
  event_delete("Id of the event" id: ID!): EventResponse!
  event_toggleInviteLink(
    "Id of the event"
    id: ID!
    "Indicates if link should be active or not"
    isInviteLinkActive: Boolean!
  ): EventResponse!

  "Invite a user to an event"
  event_inviteUsers(
    "Id of the event"
    id: ID!
    "A list of emails to send invitation to"
    invitedEmails: [String!]!
  ): EventResponse!

  "Invitee accepts invitation"
  event_acceptInvitation(
    "Id of the event"
    id: ID!
    "Indicates if this endpoint is been triggered in response to a notification"
    viaNotification: Boolean!
  ): InviteeResponse!

  "Invitee rejects invitation"
  event_rejectInvitation(
    "Id of the event"
    id: ID!
    "Indicates if this endpoint is been triggered in response to a notification"
    viaNotification: Boolean!
  ): EventResponse!

  "Remove an invitee from an event"
  event_removeInvitee(
    "Id of the event"
    id: ID!
    "Id of the invitee who is to be removed"
    inviteeId: ID!
  ): InviteeResponse!

  "Assign role to an invitee"
  event_assignRoleToInvitee(
    "Id of the event"
    id: ID!
    "Id of the invitee"
    inviteeId: ID!
    "Role to assign to invitee"
    role: INVITEE_ROLES!
  ): InviteeResponse!

  "Add a todo to an event"
  event_addTodo(
    "Id of the event which the todo belongs to"
    id: ID!
    "Title of the todo"
    title: String!
    "Todo notes"
    note: String!
  ): TodoResponse!
  "Edit a todo of an event"
  event_editTodo(
    "Id of the event which the todo belongs to"
    id: ID!
    "Id of the todo which is been edited"
    todoId: ID!
    title: String!
    note: String!
  ): TodoResponse!
  "Delete a todo from an event"
  event_deleteTodo(
    "Id of the event which the todo belongs to"
    id: ID!
    "Id of the todo which is be deleted"
    todoId: ID!
  ): TodoResponse!
  "Duplicate a todo in an event"
  event_duplicateTodo(
    "Id of the event which the todo belongs to"
    id: ID!
    "Id of the todo to be duplicated"
    todoId: ID!
  ): TodoResponse!
  "Change a todo's status to either completed or uncompleted"
  event_markTodo(
    "Id of the event which the todo belongs to"
    id: ID!
    "Id of the todo to be marked"
    todoId: ID!
    "Indicates if todo is completed or not"
    isCompleted: Boolean!
  ): TodoResponse!
}

type Event {
  _id: ID!
  "Event name"
  title: String!
  "Event date"
  date: Date!
  "Number of days between when -an event reminder is sent- and when -the event eventually takes place-"
  daysBtwnReminderAndEvent: Int!
  "Number of todos in the event"
  todoCount: Int!
  "The todos of the event"
  todos: [Todo]
  "The background image of the event"
  bgCover: String!
  """
  A string of 8 characters that is unique to each event. e.g - 90725902
  To be appended to the domain name that serves as invitation link to an event. e.g - https://evens.io/90725902
  """
  inviteLinkId: String!
  "Indicates if the invitation link is active or not"
  isInviteLinkActive: Boolean!
  "List of emails of which an -event invitation- has been sent to"
  invitedEmails: [String]!
  "List of invitees who have accepted the invitation"
  invitees: [Invitee]!
  "Information about the event creator"
  owner: EventOwner!

  id: String
}

type EventResponse {
  code: String!
  success: Boolean!
  error: String
  data: Event!
}

type TodoResponse {
  code: String!
  success: Boolean!
  error: String
  data: Todo!
}

type InviteeResponse {
  code: String!
  success: Boolean!
  error: String
  data: Invitee!
}

type Todo {
  _id: ID!
  title: String!
  note: String!
  isCompleted: Boolean!
  id: String
}

type Invitee {
  _id: ID!
  name: String!
  email: String!
  photo: String
  role: INVITEE_ROLES!
  id: String
}

type EventOwner {
  _id: ID!
  name: String!
  email: String!
  photo: String
  id: String
}

# Inputs
input CreateEventArgs {
  "Event name"
  title: String!
  "Event date"
  date: DateTime!
  "Number of days between when -an event reminder is sent- and when -the event eventually takes place-"
  daysBtwnReminderAndEvent: Int!
  "The background image of the event"
  bgCover: String!
  "Todos which the user added during creation of the event"
  todos: [TodoArgs!]
  "List of emails to send invitation to"
  invitedEmails: [String]!
  "The invitation link id of the event"
  inviteLinkId: String!
  "List of invitees who have accepted the invitation"
  isInviteLinkActive: Boolean!
}

input TodoArgs {
  title: String!
  note: String!
}
